-- Migration 008: Add Action Metadata to Chat Messages
-- Purpose: Track agent tool executions and enable undo/rollback functionality
--
-- Author: AI Assistant
-- Date: 2025-10-02

-- Add columns to chat_messages for agent actions
ALTER TABLE chat_messages
ADD COLUMN IF NOT EXISTS agent_actions JSONB DEFAULT '[]'::jsonb,
ADD COLUMN IF NOT EXISTS agent_status TEXT CHECK (agent_status IN ('thinking', 'executing', 'completed', 'error', NULL)),
ADD COLUMN IF NOT EXISTS execution_time_ms INTEGER,
ADD COLUMN IF NOT EXISTS is_agent_response BOOLEAN DEFAULT false;

-- Create index for agent responses
CREATE INDEX IF NOT EXISTS idx_chat_messages_agent_response
  ON chat_messages(session_id)
  WHERE is_agent_response = true;

-- Create index for agent status
CREATE INDEX IF NOT EXISTS idx_chat_messages_agent_status
  ON chat_messages(agent_status)
  WHERE agent_status IS NOT NULL;

-- Add comments
COMMENT ON COLUMN chat_messages.agent_actions IS 'Array of agent tool executions with results (for undo/rollback)';
COMMENT ON COLUMN chat_messages.agent_status IS 'Current status of agent processing (thinking, executing, completed, error)';
COMMENT ON COLUMN chat_messages.execution_time_ms IS 'Total execution time for agent response in milliseconds';
COMMENT ON COLUMN chat_messages.is_agent_response IS 'Whether this message was generated by the agent orchestrator';

-- Create agent_action_history table for detailed action tracking
CREATE TABLE IF NOT EXISTS agent_action_history (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  session_id UUID NOT NULL REFERENCES chat_sessions(id) ON DELETE CASCADE,
  message_id UUID NOT NULL REFERENCES chat_messages(id) ON DELETE CASCADE,
  user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  action_type TEXT NOT NULL,  -- 'create', 'update', 'delete', 'search', etc.
  tool_name TEXT NOT NULL,
  entity_type TEXT,  -- 'campaign', 'kol_list', 'kol', etc.
  entity_id TEXT,  -- ID of the entity that was created/modified
  action_data JSONB NOT NULL DEFAULT '{}'::jsonb,  -- Full action details
  is_reversible BOOLEAN DEFAULT false,
  is_reversed BOOLEAN DEFAULT false,
  reversed_at TIMESTAMPTZ,
  reversed_by_action_id UUID REFERENCES agent_action_history(id),
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Indexes for agent_action_history
CREATE INDEX idx_agent_action_session ON agent_action_history(session_id);
CREATE INDEX idx_agent_action_message ON agent_action_history(message_id);
CREATE INDEX idx_agent_action_user ON agent_action_history(user_id);
CREATE INDEX idx_agent_action_entity ON agent_action_history(entity_type, entity_id);
CREATE INDEX idx_agent_action_reversible ON agent_action_history(is_reversible) WHERE is_reversible = true;
CREATE INDEX idx_agent_action_reversed ON agent_action_history(is_reversed) WHERE is_reversed = true;

-- RLS Policies for agent_action_history
ALTER TABLE agent_action_history ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Users can view their own action history" ON agent_action_history
  FOR SELECT
  USING (auth.uid() = user_id);

CREATE POLICY "Service role can insert action history" ON agent_action_history
  FOR INSERT
  WITH CHECK (true);

CREATE POLICY "Users can update their own action history" ON agent_action_history
  FOR UPDATE
  USING (auth.uid() = user_id)
  WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Admins can view all action history" ON agent_action_history
  FOR SELECT
  USING (
    EXISTS (
      SELECT 1 FROM users
      WHERE users.id = auth.uid()
      AND users.role = 'admin'
    )
  );

-- Comments for agent_action_history
COMMENT ON TABLE agent_action_history IS 'Detailed history of agent actions for undo/rollback functionality';
COMMENT ON COLUMN agent_action_history.action_type IS 'Type of action performed (create, update, delete, search)';
COMMENT ON COLUMN agent_action_history.tool_name IS 'Name of the agent tool that performed the action';
COMMENT ON COLUMN agent_action_history.entity_type IS 'Type of entity affected (campaign, kol_list, etc.)';
COMMENT ON COLUMN agent_action_history.entity_id IS 'ID of the entity that was created/modified';
COMMENT ON COLUMN agent_action_history.action_data IS 'Full action details including parameters and results';
COMMENT ON COLUMN agent_action_history.is_reversible IS 'Whether this action can be reversed/undone';
COMMENT ON COLUMN agent_action_history.is_reversed IS 'Whether this action has been reversed';
COMMENT ON COLUMN agent_action_history.reversed_by_action_id IS 'ID of the action that reversed this action';
